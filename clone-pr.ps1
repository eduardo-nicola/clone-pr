# Clone PR - Fun√ß√µes para duplica√ß√£o de Pull Requests (PowerShell)
# Autor: Eduardo Possani
# Vers√£o: 1.0

# Fun√ß√£o para duplicar um PR para a branch staging
# Uso: pr-dup-stg <repo> <numero_pr>
# Exemplo: pr-dup-stg microsoft/vscode 123
function pr-dup-stg {
    param(
        [Parameter(Mandatory=$true, Position=0)]
        [string]$Repo,
        
        [Parameter(Mandatory=$true, Position=1)]
        [int]$PrNumber
    )
    
    if ([string]::IsNullOrWhiteSpace($Repo) -or $PrNumber -le 0) {
        Write-Host "‚ùå Uso: pr-dup-stg <repo> <numero_pr>" -ForegroundColor Red
        Write-Host "üìñ Exemplo: pr-dup-stg microsoft/vscode 123" -ForegroundColor Yellow
        return
    }
    
    Write-Host "üîÑ Duplicando PR #$PrNumber de $Repo para staging..." -ForegroundColor Cyan
    
    # Verificar se o PR existe
    try {
        $null = gh pr view $PrNumber --repo $Repo --json title 2>$null
    } catch {
        Write-Host "‚ùå PR #$PrNumber n√£o encontrado no reposit√≥rio $Repo" -ForegroundColor Red
        return
    }
    
    # Obter informa√ß√µes do PR
    try {
        $headRef = gh pr view $PrNumber --repo $Repo --json headRefName -q .headRefName
        $title = gh pr view $PrNumber --repo $Repo --json title -q .title
        $body = gh pr view $PrNumber --repo $Repo --json body -q .body
        
        # Criar novo PR
        gh pr create --repo $Repo --base staging --head $headRef --title $title --body $body
        
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ PR duplicado com sucesso para staging!" -ForegroundColor Green
        } else {
            Write-Host "‚ùå Erro ao criar o PR" -ForegroundColor Red
        }
    } catch {
        Write-Host "‚ùå Erro ao processar o PR: $($_.Exception.Message)" -ForegroundColor Red
    }
}

# Fun√ß√£o para duplicar um PR para uma branch espec√≠fica
# Uso: pr-dup <repo> <numero_pr> <branch_destino>
# Exemplo: pr-dup microsoft/vscode 123 develop
function pr-dup {
    param(
        [Parameter(Mandatory=$true, Position=0)]
        [string]$Repo,
        
        [Parameter(Mandatory=$true, Position=1)]
        [int]$PrNumber,
        
        [Parameter(Mandatory=$true, Position=2)]
        [string]$TargetBranch
    )
    
    if ([string]::IsNullOrWhiteSpace($Repo) -or $PrNumber -le 0 -or [string]::IsNullOrWhiteSpace($TargetBranch)) {
        Write-Host "‚ùå Uso: pr-dup <repo> <numero_pr> <branch_destino>" -ForegroundColor Red
        Write-Host "üìñ Exemplo: pr-dup microsoft/vscode 123 develop" -ForegroundColor Yellow
        return
    }
    
    Write-Host "üîÑ Duplicando PR #$PrNumber de $Repo para $TargetBranch..." -ForegroundColor Cyan
    
    # Verificar se o PR existe
    try {
        $null = gh pr view $PrNumber --repo $Repo --json title 2>$null
    } catch {
        Write-Host "‚ùå PR #$PrNumber n√£o encontrado no reposit√≥rio $Repo" -ForegroundColor Red
        return
    }
    
    # Obter informa√ß√µes do PR
    try {
        $headRef = gh pr view $PrNumber --repo $Repo --json headRefName -q .headRefName
        $title = gh pr view $PrNumber --repo $Repo --json title -q .title
        $body = gh pr view $PrNumber --repo $Repo --json body -q .body
        
        # Criar novo PR
        gh pr create --repo $Repo --base $TargetBranch --head $headRef --title $title --body $body
        
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ PR duplicado com sucesso para $TargetBranch!" -ForegroundColor Green
        } else {
            Write-Host "‚ùå Erro ao criar o PR" -ForegroundColor Red
        }
    } catch {
        Write-Host "‚ùå Erro ao processar o PR: $($_.Exception.Message)" -ForegroundColor Red
    }
}

# Exportar fun√ß√µes
Export-ModuleMember -Function pr-dup-stg, pr-dup
